{"version":3,"sources":["mock.tsx"],"names":["TIMEOUT","_EspIdfRn","checkPermissions","Promise","resolve","startBleScan","setTimeout","eventEmitter","emit","deviceName","serviceUuid","status","stopBleScan","connectDevice","disconnectDevice","startWifiScan","wifiList","ssid","rssi","auth","doProvisioning","then","sendCertificate","Object","keys","forEach","it","EspIdfRn"],"mappings":"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","sourcesContent":["import type { EspProvisioning, WifiAP } from '.'\r\nimport EspIdfRn, { eventEmitter } from '.'\r\n\r\nconst TIMEOUT = 1800\r\nconst _EspIdfRn: EspProvisioning = {\r\n\tcheckPermissions() {\r\n\t\treturn Promise.resolve(true)\r\n\t},\r\n\tstartBleScan() {\r\n\t\tsetTimeout(() => {\r\n\t\t\teventEmitter.emit('scanBle', [\r\n\t\t\t\t{ deviceName: 'Casa_29E2', serviceUuid: 'Casa_29E2' },\r\n\t\t\t])\r\n\t\t}, TIMEOUT)\r\n\t\tsetTimeout(() => {\r\n\t\t\teventEmitter.emit('scanBle', { status: 1 })\r\n\t\t}, TIMEOUT * 2)\r\n\t\treturn Promise.resolve(true)\r\n\t},\r\n\tstopBleScan() {},\r\n\tconnectDevice() {\r\n\t\tsetTimeout(() => {\r\n\t\t\teventEmitter.emit('connection', { status: 1 })\r\n\t\t}, TIMEOUT)\r\n\t\treturn Promise.resolve(true)\r\n\t},\r\n\tdisconnectDevice() {},\r\n\tstartWifiScan() {\r\n\t\tsetTimeout(() => {\r\n\t\t\teventEmitter.emit('scanWifi', {\r\n\t\t\t\twifiList: [\r\n\t\t\t\t\t{ ssid: 'Spectrum_1521', rssi: -49, auth: 1 },\r\n\t\t\t\t\t{ ssid: 'TMobile_XBDE', rssi: -59, auth: 0 },\r\n\t\t\t\t\t{ ssid: 'Att_XBDE', rssi: -69, auth: 1 },\r\n\t\t\t\t\t{ ssid: 'Verizon_D9E', rssi: -79, auth: 0 },\r\n\t\t\t\t] as WifiAP[],\r\n\t\t\t})\r\n\t\t}, TIMEOUT)\r\n\t\treturn Promise.resolve(true)\r\n\t},\r\n\tdoProvisioning() {\r\n\t\tnew Promise((resolve) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\teventEmitter.emit('provisioning', { status: 3 })\r\n\t\t\t\tresolve(true)\r\n\t\t\t}, TIMEOUT)\r\n\t\t}).then(() => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\teventEmitter.emit('provisioning', { status: 5 })\r\n\t\t\t}, TIMEOUT)\r\n\t\t})\r\n\t\treturn Promise.resolve(true)\r\n\t},\r\n\tsendCertificate() {\r\n\t\tsetTimeout(() => {\r\n\t\t\teventEmitter.emit('certificate', { status: 1 })\r\n\t\t}, TIMEOUT)\r\n\t\treturn Promise.resolve(true)\r\n\t},\r\n}\r\nObject.keys(_EspIdfRn).forEach((it) => {\r\n\t;(EspIdfRn as any)[it] = (_EspIdfRn as any)[it]\r\n})\r\n\r\nexport default EspIdfRn\r\n\r\nexport { useProvisioning } from '.'\r\n"]}